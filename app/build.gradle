apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
        //noinspection GroovyMissingReturnStatement
        release {
        }
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        animationsDisabled = true
    }

    defaultConfig {
        applicationId "com.ironflowers.firebasetest"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        testInstrumentationRunner "com.ironflowers.firebasetest.util.TestRunner"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
    }

    // share some classes between androidTest and test:
    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    flavorDimensions "api", "mode"
    productFlavors {
        dev21 {
            // min 21 has faster build times, also with instant build
            minSdkVersion 21
            dimension "api"
        }
        dev16 {
            minSdkVersion 16
            dimension "api"
        }
        mock {
            dimension "mode"
        }
        prod {
            minSdkVersion 16
            dimension "mode"
        }
    }
    // remove mockRelease:
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.getFlavors().get(1).name == 'mock') {
            variant.setIgnore(true);
        }
    }
    packagingOptions {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/NOTICE.txt"
    }
}

dependencies {

    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso.idling:idling-concurrent:$rootProject.espressoVersion"
    androidTestImplementation("org.mockito:mockito-android:$rootProject.mockitoVersion") {
        exclude group: 'junit' exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    implementation "com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion"

    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "org.hamcrest:hamcrest-all:$rootProject.hamcrestVersion"

    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:palette-v7:$rootProject.supportLibraryVersion"

    implementation "com.android.support:multidex:$rootProject.supportMultiDexVersion"

    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    implementation "com.google.firebase:firebase-auth:$rootProject.firebaseVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
    implementation "com.google.firebase:firebase-database:$rootProject.firebaseVersion"
    implementation "com.google.firebase:firebase-storage:$rootProject.firebaseVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
}

apply plugin: 'com.google.gms.google-services'